services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - attendance-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@database:5432/attendance_db
      - PYTHONPATH=/app
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - attendance-network

  database:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=attendance_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d attendance_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - attendance-network

volumes:
  postgres_data:

networks:
  attendance-network:
    driver: bridge